                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module max7219
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 	.globl _GPIO_WriteLow
                                     13 	.globl _GPIO_WriteHigh
                                     14 	.globl _GPIO_Init
                                     15 	.globl _matrix
                                     16 	.globl _MaxMatrix
                                     17 	.globl _setCommand
                                     18 	.globl _Init
                                     19 	.globl _setIntensity
                                     20 	.globl _Clear
                                     21 	.globl _Screen
                                     22 	.globl _setDot
                                     23 	.globl _setColumn
                                     24 	.globl _setRow
                                     25 	.globl _DrawEx
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DATA
      000000                         30 _matrix::
      000000                         31 	.ds 86
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area INITIALIZED
                                     36 ;--------------------------------------------------------
                                     37 ; absolute external ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area DABS (ABS)
                                     40 ;--------------------------------------------------------
                                     41 ; global & static initialisations
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area GSINIT
                                     45 	.area GSFINAL
                                     46 	.area GSINIT
                                     47 ;--------------------------------------------------------
                                     48 ; Home
                                     49 ;--------------------------------------------------------
                                     50 	.area HOME
                                     51 	.area HOME
                                     52 ;--------------------------------------------------------
                                     53 ; code
                                     54 ;--------------------------------------------------------
                                     55 	.area CODE
                                     56 ;	user/max7219.c: 7: static void delay_ms(uint8_t x)
                                     57 ;	-----------------------------------------
                                     58 ;	 function delay_ms
                                     59 ;	-----------------------------------------
      000000                         60 _delay_ms:
      000000 88               [ 1]   61 	push	a
                                     62 ;	user/max7219.c: 9: while(x--);
      000001 7B 04            [ 1]   63 	ld	a, (0x04, sp)
      000003                         64 00101$:
      000003 6B 01            [ 1]   65 	ld	(0x01, sp), a
      000005 4A               [ 1]   66 	dec	a
      000006 0D 01            [ 1]   67 	tnz	(0x01, sp)
      000008 26 F9            [ 1]   68 	jrne	00101$
      00000A 84               [ 1]   69 	pop	a
      00000B 81               [ 4]   70 	ret
                                     71 ;	user/max7219.c: 12: void MaxMatrix(GPIO_TypeDef* port, uint8_t data, uint8_t cs, uint8_t clk, uint8_t numLed)
                                     72 ;	-----------------------------------------
                                     73 ;	 function MaxMatrix
                                     74 ;	-----------------------------------------
      00000C                         75 _MaxMatrix:
      00000C 89               [ 2]   76 	pushw	x
                                     77 ;	user/max7219.c: 14: matrix.port = port;
      00000D AEr00r00         [ 2]   78 	ldw	x, #_matrix+0
      000010 16 05            [ 2]   79 	ldw	y, (0x05, sp)
      000012 FF               [ 2]   80 	ldw	(x), y
                                     81 ;	user/max7219.c: 15: matrix.data = data;
      000013 AEr00r00         [ 2]   82 	ldw	x, #_matrix+0
      000016 1F 01            [ 2]   83 	ldw	(0x01, sp), x
      000018 1E 01            [ 2]   84 	ldw	x, (0x01, sp)
      00001A 5C               [ 2]   85 	incw	x
      00001B 5C               [ 2]   86 	incw	x
      00001C 7B 07            [ 1]   87 	ld	a, (0x07, sp)
      00001E F7               [ 1]   88 	ld	(x), a
                                     89 ;	user/max7219.c: 16: matrix.cs = cs;
      00001F 1E 01            [ 2]   90 	ldw	x, (0x01, sp)
      000021 7B 08            [ 1]   91 	ld	a, (0x08, sp)
      000023 E7 03            [ 1]   92 	ld	(0x0003, x), a
                                     93 ;	user/max7219.c: 17: matrix.clk = clk;
      000025 1E 01            [ 2]   94 	ldw	x, (0x01, sp)
      000027 7B 09            [ 1]   95 	ld	a, (0x09, sp)
      000029 E7 04            [ 1]   96 	ld	(0x0004, x), a
                                     97 ;	user/max7219.c: 18: matrix.maxLed =  numLed;
      00002B 1E 01            [ 2]   98 	ldw	x, (0x01, sp)
      00002D 7B 0A            [ 1]   99 	ld	a, (0x0a, sp)
      00002F E7 05            [ 1]  100 	ld	(0x0005, x), a
                                    101 ;	user/max7219.c: 19: memset(matrix.buffer, 0x00, sizeof(matrix.buffer));
      000031 1E 01            [ 2]  102 	ldw	x, (0x01, sp)
      000033 1C 00 06         [ 2]  103 	addw	x, #0x0006
      000036 4B 50            [ 1]  104 	push	#0x50
      000038 4B 00            [ 1]  105 	push	#0x00
      00003A 4B 00            [ 1]  106 	push	#0x00
      00003C 4B 00            [ 1]  107 	push	#0x00
      00003E 89               [ 2]  108 	pushw	x
      00003F CDr00r00         [ 4]  109 	call	_memset
      000042 5B 08            [ 2]  110 	addw	sp, #8
      000044 81               [ 4]  111 	ret
                                    112 ;	user/max7219.c: 22: static void Max7219_Write_Byte(uint8_t dat)
                                    113 ;	-----------------------------------------
                                    114 ;	 function Max7219_Write_Byte
                                    115 ;	-----------------------------------------
      000045                        116 _Max7219_Write_Byte:
      000045 52 06            [ 2]  117 	sub	sp, #6
                                    118 ;	user/max7219.c: 26: dsent = dat;
      000047 7B 09            [ 1]  119 	ld	a, (0x09, sp)
      000049 6B 02            [ 1]  120 	ld	(0x02, sp), a
                                    121 ;	user/max7219.c: 27: for(cnt=0; cnt<8; cnt++)
      00004B AEr00r00         [ 2]  122 	ldw	x, #_matrix+0
      00004E 1F 03            [ 2]  123 	ldw	(0x03, sp), x
      000050 1E 03            [ 2]  124 	ldw	x, (0x03, sp)
      000052 1C 00 04         [ 2]  125 	addw	x, #0x0004
      000055 1F 05            [ 2]  126 	ldw	(0x05, sp), x
      000057 0F 01            [ 1]  127 	clr	(0x01, sp)
      000059                        128 00105$:
                                    129 ;	user/max7219.c: 29: GPIO_WriteLow(matrix.port, matrix.clk);
      000059 1E 05            [ 2]  130 	ldw	x, (0x05, sp)
      00005B F6               [ 1]  131 	ld	a, (x)
      00005C 1E 03            [ 2]  132 	ldw	x, (0x03, sp)
      00005E FE               [ 2]  133 	ldw	x, (x)
      00005F 88               [ 1]  134 	push	a
      000060 89               [ 2]  135 	pushw	x
      000061 CDr00r00         [ 4]  136 	call	_GPIO_WriteLow
      000064 5B 03            [ 2]  137 	addw	sp, #3
      000066 1E 03            [ 2]  138 	ldw	x, (0x03, sp)
      000068 FE               [ 2]  139 	ldw	x, (x)
                                    140 ;	user/max7219.c: 31: GPIO_WriteHigh(matrix.port, matrix.data);
      000069 16 03            [ 2]  141 	ldw	y, (0x03, sp)
      00006B 90 E6 02         [ 1]  142 	ld	a, (0x2, y)
                                    143 ;	user/max7219.c: 30: if(dsent&0x80)
      00006E 0D 02            [ 1]  144 	tnz	(0x02, sp)
      000070 2A 09            [ 1]  145 	jrpl	00102$
                                    146 ;	user/max7219.c: 31: GPIO_WriteHigh(matrix.port, matrix.data);
      000072 88               [ 1]  147 	push	a
      000073 89               [ 2]  148 	pushw	x
      000074 CDr00r00         [ 4]  149 	call	_GPIO_WriteHigh
      000077 5B 03            [ 2]  150 	addw	sp, #3
      000079 20 07            [ 2]  151 	jra	00103$
      00007B                        152 00102$:
                                    153 ;	user/max7219.c: 33: GPIO_WriteLow(matrix.port, matrix.data);
      00007B 88               [ 1]  154 	push	a
      00007C 89               [ 2]  155 	pushw	x
      00007D CDr00r00         [ 4]  156 	call	_GPIO_WriteLow
      000080 5B 03            [ 2]  157 	addw	sp, #3
      000082                        158 00103$:
                                    159 ;	user/max7219.c: 34: GPIO_WriteHigh(matrix.port, matrix.clk);
      000082 1E 05            [ 2]  160 	ldw	x, (0x05, sp)
      000084 F6               [ 1]  161 	ld	a, (x)
      000085 1E 03            [ 2]  162 	ldw	x, (0x03, sp)
      000087 FE               [ 2]  163 	ldw	x, (x)
      000088 88               [ 1]  164 	push	a
      000089 89               [ 2]  165 	pushw	x
      00008A CDr00r00         [ 4]  166 	call	_GPIO_WriteHigh
      00008D 5B 03            [ 2]  167 	addw	sp, #3
                                    168 ;	user/max7219.c: 35: dsent <<= 1;
      00008F 08 02            [ 1]  169 	sll	(0x02, sp)
                                    170 ;	user/max7219.c: 27: for(cnt=0; cnt<8; cnt++)
      000091 0C 01            [ 1]  171 	inc	(0x01, sp)
      000093 7B 01            [ 1]  172 	ld	a, (0x01, sp)
      000095 A1 08            [ 1]  173 	cp	a, #0x08
      000097 25 C0            [ 1]  174 	jrc	00105$
      000099 5B 06            [ 2]  175 	addw	sp, #6
      00009B 81               [ 4]  176 	ret
                                    177 ;	user/max7219.c: 39: void setCommand(uint8_t command, uint8_t value)
                                    178 ;	-----------------------------------------
                                    179 ;	 function setCommand
                                    180 ;	-----------------------------------------
      00009C                        181 _setCommand:
      00009C 52 07            [ 2]  182 	sub	sp, #7
                                    183 ;	user/max7219.c: 42: GPIO_WriteLow(matrix.port, matrix.cs);
      00009E AEr00r00         [ 2]  184 	ldw	x, #_matrix+0
      0000A1 1F 02            [ 2]  185 	ldw	(0x02, sp), x
      0000A3 1E 02            [ 2]  186 	ldw	x, (0x02, sp)
      0000A5 1C 00 03         [ 2]  187 	addw	x, #0x0003
      0000A8 1F 04            [ 2]  188 	ldw	(0x04, sp), x
      0000AA 1E 04            [ 2]  189 	ldw	x, (0x04, sp)
      0000AC F6               [ 1]  190 	ld	a, (x)
      0000AD 1E 02            [ 2]  191 	ldw	x, (0x02, sp)
      0000AF FE               [ 2]  192 	ldw	x, (x)
      0000B0 88               [ 1]  193 	push	a
      0000B1 89               [ 2]  194 	pushw	x
      0000B2 CDr00r00         [ 4]  195 	call	_GPIO_WriteLow
      0000B5 5B 03            [ 2]  196 	addw	sp, #3
                                    197 ;	user/max7219.c: 43: for(i = 0; i < matrix.maxLed; i++)
      0000B7 16 02            [ 2]  198 	ldw	y, (0x02, sp)
      0000B9 17 06            [ 2]  199 	ldw	(0x06, sp), y
      0000BB 0F 01            [ 1]  200 	clr	(0x01, sp)
      0000BD                        201 00103$:
      0000BD 1E 06            [ 2]  202 	ldw	x, (0x06, sp)
      0000BF E6 05            [ 1]  203 	ld	a, (0x5, x)
      0000C1 11 01            [ 1]  204 	cp	a, (0x01, sp)
      0000C3 23 12            [ 2]  205 	jrule	00101$
                                    206 ;	user/max7219.c: 45: Max7219_Write_Byte(command);
      0000C5 7B 0A            [ 1]  207 	ld	a, (0x0a, sp)
      0000C7 88               [ 1]  208 	push	a
      0000C8 CDr00r45         [ 4]  209 	call	_Max7219_Write_Byte
      0000CB 84               [ 1]  210 	pop	a
                                    211 ;	user/max7219.c: 46: Max7219_Write_Byte(value);
      0000CC 7B 0B            [ 1]  212 	ld	a, (0x0b, sp)
      0000CE 88               [ 1]  213 	push	a
      0000CF CDr00r45         [ 4]  214 	call	_Max7219_Write_Byte
      0000D2 84               [ 1]  215 	pop	a
                                    216 ;	user/max7219.c: 43: for(i = 0; i < matrix.maxLed; i++)
      0000D3 0C 01            [ 1]  217 	inc	(0x01, sp)
      0000D5 20 E6            [ 2]  218 	jra	00103$
      0000D7                        219 00101$:
                                    220 ;	user/max7219.c: 48: GPIO_WriteLow(matrix.port, matrix.cs);
      0000D7 1E 04            [ 2]  221 	ldw	x, (0x04, sp)
      0000D9 F6               [ 1]  222 	ld	a, (x)
      0000DA 1E 02            [ 2]  223 	ldw	x, (0x02, sp)
      0000DC FE               [ 2]  224 	ldw	x, (x)
      0000DD 88               [ 1]  225 	push	a
      0000DE 89               [ 2]  226 	pushw	x
      0000DF CDr00r00         [ 4]  227 	call	_GPIO_WriteLow
      0000E2 5B 03            [ 2]  228 	addw	sp, #3
                                    229 ;	user/max7219.c: 49: GPIO_WriteHigh(matrix.port, matrix.cs);
      0000E4 1E 04            [ 2]  230 	ldw	x, (0x04, sp)
      0000E6 F6               [ 1]  231 	ld	a, (x)
      0000E7 1E 02            [ 2]  232 	ldw	x, (0x02, sp)
      0000E9 FE               [ 2]  233 	ldw	x, (x)
      0000EA 88               [ 1]  234 	push	a
      0000EB 89               [ 2]  235 	pushw	x
      0000EC CDr00r00         [ 4]  236 	call	_GPIO_WriteHigh
      0000EF 5B 0A            [ 2]  237 	addw	sp, #10
      0000F1 81               [ 4]  238 	ret
                                    239 ;	user/max7219.c: 52: void Init(void)
                                    240 ;	-----------------------------------------
                                    241 ;	 function Init
                                    242 ;	-----------------------------------------
      0000F2                        243 _Init:
      0000F2 52 04            [ 2]  244 	sub	sp, #4
                                    245 ;	user/max7219.c: 54: GPIO_Init(matrix.port, matrix.data|matrix.cs|matrix.clk, GPIO_MODE_OUT_PP_HIGH_FAST);
      0000F4 AEr00r00         [ 2]  246 	ldw	x, #_matrix+0
      0000F7 1F 03            [ 2]  247 	ldw	(0x03, sp), x
      0000F9 1E 03            [ 2]  248 	ldw	x, (0x03, sp)
      0000FB E6 02            [ 1]  249 	ld	a, (0x2, x)
      0000FD 6B 02            [ 1]  250 	ld	(0x02, sp), a
      0000FF 1E 03            [ 2]  251 	ldw	x, (0x03, sp)
      000101 E6 03            [ 1]  252 	ld	a, (0x3, x)
      000103 1A 02            [ 1]  253 	or	a, (0x02, sp)
      000105 6B 01            [ 1]  254 	ld	(0x01, sp), a
      000107 1E 03            [ 2]  255 	ldw	x, (0x03, sp)
      000109 E6 04            [ 1]  256 	ld	a, (0x4, x)
      00010B 1A 01            [ 1]  257 	or	a, (0x01, sp)
      00010D 1E 03            [ 2]  258 	ldw	x, (0x03, sp)
      00010F FE               [ 2]  259 	ldw	x, (x)
      000110 4B F0            [ 1]  260 	push	#0xf0
      000112 88               [ 1]  261 	push	a
      000113 89               [ 2]  262 	pushw	x
      000114 CDr00r00         [ 4]  263 	call	_GPIO_Init
      000117 5B 04            [ 2]  264 	addw	sp, #4
                                    265 ;	user/max7219.c: 55: setCommand(SCANLIMIT, 0x07); //scanf 8digit
      000119 4B 07            [ 1]  266 	push	#0x07
      00011B 4B 0B            [ 1]  267 	push	#0x0b
      00011D CDr00r9C         [ 4]  268 	call	_setCommand
      000120 85               [ 2]  269 	popw	x
                                    270 ;	user/max7219.c: 56: setCommand(DECODEMODE, 0x00); //use led matrix, not decode digit
      000121 4B 00            [ 1]  271 	push	#0x00
      000123 4B 09            [ 1]  272 	push	#0x09
      000125 CDr00r9C         [ 4]  273 	call	_setCommand
      000128 85               [ 2]  274 	popw	x
                                    275 ;	user/max7219.c: 57: setCommand(SHUTDOWN, 0x01); // normal operator
      000129 4B 01            [ 1]  276 	push	#0x01
      00012B 4B 0C            [ 1]  277 	push	#0x0c
      00012D CDr00r9C         [ 4]  278 	call	_setCommand
      000130 85               [ 2]  279 	popw	x
                                    280 ;	user/max7219.c: 58: setCommand(DISPLAYTEST, 0x00); //no display test
      000131 4B 00            [ 1]  281 	push	#0x00
      000133 4B 0F            [ 1]  282 	push	#0x0f
      000135 CDr00r9C         [ 4]  283 	call	_setCommand
      000138 85               [ 2]  284 	popw	x
                                    285 ;	user/max7219.c: 59: Clear();
      000139 CDr01r50         [ 4]  286 	call	_Clear
                                    287 ;	user/max7219.c: 60: setCommand(INTENSITY, 0x04); // brightness 9/32
      00013C 4B 04            [ 1]  288 	push	#0x04
      00013E 4B 0A            [ 1]  289 	push	#0x0a
      000140 CDr00r9C         [ 4]  290 	call	_setCommand
      000143 5B 06            [ 2]  291 	addw	sp, #6
      000145 81               [ 4]  292 	ret
                                    293 ;	user/max7219.c: 63: void setIntensity(uint8_t intensity)
                                    294 ;	-----------------------------------------
                                    295 ;	 function setIntensity
                                    296 ;	-----------------------------------------
      000146                        297 _setIntensity:
                                    298 ;	user/max7219.c: 65: setCommand(INTENSITY, intensity);
      000146 7B 03            [ 1]  299 	ld	a, (0x03, sp)
      000148 88               [ 1]  300 	push	a
      000149 4B 0A            [ 1]  301 	push	#0x0a
      00014B CDr00r9C         [ 4]  302 	call	_setCommand
      00014E 85               [ 2]  303 	popw	x
      00014F 81               [ 4]  304 	ret
                                    305 ;	user/max7219.c: 68: void Clear(void)
                                    306 ;	-----------------------------------------
                                    307 ;	 function Clear
                                    308 ;	-----------------------------------------
      000150                        309 _Clear:
                                    310 ;	user/max7219.c: 70: memset(matrix.buffer, 0x00, sizeof(matrix.buffer));
      000150 AEr00r06         [ 2]  311 	ldw	x, #_matrix+6
      000153 4B 50            [ 1]  312 	push	#0x50
      000155 4B 00            [ 1]  313 	push	#0x00
      000157 4B 00            [ 1]  314 	push	#0x00
      000159 4B 00            [ 1]  315 	push	#0x00
      00015B 89               [ 2]  316 	pushw	x
      00015C CDr00r00         [ 4]  317 	call	_memset
      00015F 5B 06            [ 2]  318 	addw	sp, #6
      000161 81               [ 4]  319 	ret
                                    320 ;	user/max7219.c: 73: void Screen(void)
                                    321 ;	-----------------------------------------
                                    322 ;	 function Screen
                                    323 ;	-----------------------------------------
      000162                        324 _Screen:
      000162 52 0D            [ 2]  325 	sub	sp, #13
                                    326 ;	user/max7219.c: 76: for(i = 0; i < 8; i++)
      000164 AEr00r00         [ 2]  327 	ldw	x, #_matrix+0
      000167 1F 03            [ 2]  328 	ldw	(0x03, sp), x
      000169 1E 03            [ 2]  329 	ldw	x, (0x03, sp)
      00016B 1C 00 03         [ 2]  330 	addw	x, #0x0003
      00016E 1F 0B            [ 2]  331 	ldw	(0x0b, sp), x
      000170 0F 02            [ 1]  332 	clr	(0x02, sp)
      000172                        333 00106$:
                                    334 ;	user/max7219.c: 79: GPIO_WriteLow(matrix.port, matrix.cs);
      000172 1E 0B            [ 2]  335 	ldw	x, (0x0b, sp)
      000174 F6               [ 1]  336 	ld	a, (x)
      000175 1E 03            [ 2]  337 	ldw	x, (0x03, sp)
      000177 FE               [ 2]  338 	ldw	x, (x)
      000178 88               [ 1]  339 	push	a
      000179 89               [ 2]  340 	pushw	x
      00017A CDr00r00         [ 4]  341 	call	_GPIO_WriteLow
      00017D 5B 03            [ 2]  342 	addw	sp, #3
                                    343 ;	user/max7219.c: 80: for(j = 0; j < matrix.maxLed; j++)
      00017F 7B 02            [ 1]  344 	ld	a, (0x02, sp)
      000181 4C               [ 1]  345 	inc	a
      000182 6B 05            [ 1]  346 	ld	(0x05, sp), a
      000184 7B 05            [ 1]  347 	ld	a, (0x05, sp)
      000186 6B 08            [ 1]  348 	ld	(0x08, sp), a
      000188 1E 03            [ 2]  349 	ldw	x, (0x03, sp)
      00018A 1C 00 06         [ 2]  350 	addw	x, #0x0006
      00018D 1F 06            [ 2]  351 	ldw	(0x06, sp), x
      00018F 16 03            [ 2]  352 	ldw	y, (0x03, sp)
      000191 17 09            [ 2]  353 	ldw	(0x09, sp), y
      000193 7B 02            [ 1]  354 	ld	a, (0x02, sp)
      000195 6B 0D            [ 1]  355 	ld	(0x0d, sp), a
      000197 0F 01            [ 1]  356 	clr	(0x01, sp)
      000199                        357 00104$:
      000199 1E 09            [ 2]  358 	ldw	x, (0x09, sp)
      00019B E6 05            [ 1]  359 	ld	a, (0x5, x)
      00019D 11 01            [ 1]  360 	cp	a, (0x01, sp)
      00019F 23 1E            [ 2]  361 	jrule	00101$
                                    362 ;	user/max7219.c: 82: Max7219_Write_Byte(i+1);
      0001A1 7B 08            [ 1]  363 	ld	a, (0x08, sp)
      0001A3 88               [ 1]  364 	push	a
      0001A4 CDr00r45         [ 4]  365 	call	_Max7219_Write_Byte
      0001A7 84               [ 1]  366 	pop	a
                                    367 ;	user/max7219.c: 83: Max7219_Write_Byte(matrix.buffer[col]);
      0001A8 5F               [ 1]  368 	clrw	x
      0001A9 7B 0D            [ 1]  369 	ld	a, (0x0d, sp)
      0001AB 97               [ 1]  370 	ld	xl, a
      0001AC 72 FB 06         [ 2]  371 	addw	x, (0x06, sp)
      0001AF F6               [ 1]  372 	ld	a, (x)
      0001B0 88               [ 1]  373 	push	a
      0001B1 CDr00r45         [ 4]  374 	call	_Max7219_Write_Byte
      0001B4 84               [ 1]  375 	pop	a
                                    376 ;	user/max7219.c: 84: col += 8;
      0001B5 7B 0D            [ 1]  377 	ld	a, (0x0d, sp)
      0001B7 AB 08            [ 1]  378 	add	a, #0x08
      0001B9 6B 0D            [ 1]  379 	ld	(0x0d, sp), a
                                    380 ;	user/max7219.c: 80: for(j = 0; j < matrix.maxLed; j++)
      0001BB 0C 01            [ 1]  381 	inc	(0x01, sp)
      0001BD 20 DA            [ 2]  382 	jra	00104$
      0001BF                        383 00101$:
                                    384 ;	user/max7219.c: 86: GPIO_WriteLow(matrix.port, matrix.cs);
      0001BF 1E 0B            [ 2]  385 	ldw	x, (0x0b, sp)
      0001C1 F6               [ 1]  386 	ld	a, (x)
      0001C2 1E 03            [ 2]  387 	ldw	x, (0x03, sp)
      0001C4 FE               [ 2]  388 	ldw	x, (x)
      0001C5 88               [ 1]  389 	push	a
      0001C6 89               [ 2]  390 	pushw	x
      0001C7 CDr00r00         [ 4]  391 	call	_GPIO_WriteLow
      0001CA 5B 03            [ 2]  392 	addw	sp, #3
                                    393 ;	user/max7219.c: 87: GPIO_WriteHigh(matrix.port, matrix.cs);
      0001CC 1E 0B            [ 2]  394 	ldw	x, (0x0b, sp)
      0001CE F6               [ 1]  395 	ld	a, (x)
      0001CF 1E 03            [ 2]  396 	ldw	x, (0x03, sp)
      0001D1 FE               [ 2]  397 	ldw	x, (x)
      0001D2 88               [ 1]  398 	push	a
      0001D3 89               [ 2]  399 	pushw	x
      0001D4 CDr00r00         [ 4]  400 	call	_GPIO_WriteHigh
      0001D7 5B 03            [ 2]  401 	addw	sp, #3
                                    402 ;	user/max7219.c: 76: for(i = 0; i < 8; i++)
      0001D9 7B 05            [ 1]  403 	ld	a, (0x05, sp)
      0001DB 6B 02            [ 1]  404 	ld	(0x02, sp), a
      0001DD 7B 05            [ 1]  405 	ld	a, (0x05, sp)
      0001DF A1 08            [ 1]  406 	cp	a, #0x08
      0001E1 25 8F            [ 1]  407 	jrc	00106$
      0001E3 5B 0D            [ 2]  408 	addw	sp, #13
      0001E5 81               [ 4]  409 	ret
                                    410 ;	user/max7219.c: 91: void setDot(uint8_t col, uint8_t row, uint8_t value)
                                    411 ;	-----------------------------------------
                                    412 ;	 function setDot
                                    413 ;	-----------------------------------------
      0001E6                        414 _setDot:
      0001E6 52 07            [ 2]  415 	sub	sp, #7
                                    416 ;	user/max7219.c: 94: uint8_t n = (matrix.maxLed - 1) - (col / 8);
      0001E8 AEr00r00         [ 2]  417 	ldw	x, #_matrix+0
      0001EB 1F 06            [ 2]  418 	ldw	(0x06, sp), x
      0001ED 1E 06            [ 2]  419 	ldw	x, (0x06, sp)
      0001EF E6 05            [ 1]  420 	ld	a, (0x5, x)
      0001F1 97               [ 1]  421 	ld	xl, a
      0001F2 4A               [ 1]  422 	dec	a
      0001F3 95               [ 1]  423 	ld	xh, a
      0001F4 7B 0A            [ 1]  424 	ld	a, (0x0a, sp)
      0001F6 44               [ 1]  425 	srl	a
      0001F7 44               [ 1]  426 	srl	a
      0001F8 44               [ 1]  427 	srl	a
      0001F9 6B 03            [ 1]  428 	ld	(0x03, sp), a
      0001FB 9E               [ 1]  429 	ld	a, xh
      0001FC 10 03            [ 1]  430 	sub	a, (0x03, sp)
                                    431 ;	user/max7219.c: 95: offset = (n*8 + row);
      0001FE 48               [ 1]  432 	sll	a
      0001FF 48               [ 1]  433 	sll	a
      000200 48               [ 1]  434 	sll	a
      000201 1B 0B            [ 1]  435 	add	a, (0x0b, sp)
      000203 6B 01            [ 1]  436 	ld	(0x01, sp), a
                                    437 ;	user/max7219.c: 96: val = 0x01 << (col%8);
      000205 7B 0A            [ 1]  438 	ld	a, (0x0a, sp)
      000207 A4 07            [ 1]  439 	and	a, #0x07
      000209 61               [ 1]  440 	exg	a, yl
      00020A A6 01            [ 1]  441 	ld	a, #0x01
      00020C 61               [ 1]  442 	exg	a, yl
      00020D 4D               [ 1]  443 	tnz	a
      00020E 27 06            [ 1]  444 	jreq	00120$
      000210                        445 00119$:
      000210 61               [ 1]  446 	exg	a, yl
      000211 48               [ 1]  447 	sll	a
      000212 61               [ 1]  448 	exg	a, yl
      000213 4A               [ 1]  449 	dec	a
      000214 26 FA            [ 1]  450 	jrne	00119$
      000216                        451 00120$:
                                    452 ;	user/max7219.c: 97: if(row < 0 || row > 7 || col < 0 || col > matrix.maxLed*8) return;
      000216 7B 0B            [ 1]  453 	ld	a, (0x0b, sp)
      000218 A1 07            [ 1]  454 	cp	a, #0x07
      00021A 22 33            [ 1]  455 	jrugt	00109$
      00021C 4F               [ 1]  456 	clr	a
      00021D 95               [ 1]  457 	ld	xh, a
      00021E 58               [ 2]  458 	sllw	x
      00021F 58               [ 2]  459 	sllw	x
      000220 58               [ 2]  460 	sllw	x
      000221 7B 0A            [ 1]  461 	ld	a, (0x0a, sp)
      000223 6B 05            [ 1]  462 	ld	(0x05, sp), a
      000225 0F 04            [ 1]  463 	clr	(0x04, sp)
      000227 13 04            [ 2]  464 	cpw	x, (0x04, sp)
      000229 2F 24            [ 1]  465 	jrslt	00109$
                                    466 ;	user/max7219.c: 99: matrix.buffer[offset] |= val;
      00022B 1E 06            [ 2]  467 	ldw	x, (0x06, sp)
      00022D 1C 00 06         [ 2]  468 	addw	x, #0x0006
      000230 9F               [ 1]  469 	ld	a, xl
      000231 1B 01            [ 1]  470 	add	a, (0x01, sp)
      000233 02               [ 1]  471 	rlwa	x
      000234 A9 00            [ 1]  472 	adc	a, #0x00
      000236 95               [ 1]  473 	ld	xh, a
      000237 F6               [ 1]  474 	ld	a, (x)
                                    475 ;	user/max7219.c: 98: if(value)
      000238 0D 0C            [ 1]  476 	tnz	(0x0c, sp)
      00023A 27 09            [ 1]  477 	jreq	00107$
                                    478 ;	user/max7219.c: 99: matrix.buffer[offset] |= val;
      00023C 90 89            [ 2]  479 	pushw	y
      00023E 1A 02            [ 1]  480 	or	a, (2, sp)
      000240 90 85            [ 2]  481 	popw	y
      000242 F7               [ 1]  482 	ld	(x), a
      000243 20 0A            [ 2]  483 	jra	00109$
      000245                        484 00107$:
                                    485 ;	user/max7219.c: 101: matrix.buffer[offset] &= ~val;
      000245 88               [ 1]  486 	push	a
      000246 90 9F            [ 1]  487 	ld	a, yl
      000248 43               [ 1]  488 	cpl	a
      000249 6B 03            [ 1]  489 	ld	(0x03, sp), a
      00024B 84               [ 1]  490 	pop	a
      00024C 14 02            [ 1]  491 	and	a, (0x02, sp)
      00024E F7               [ 1]  492 	ld	(x), a
      00024F                        493 00109$:
      00024F 5B 07            [ 2]  494 	addw	sp, #7
      000251 81               [ 4]  495 	ret
                                    496 ;	user/max7219.c: 104: void setColumn(uint8_t col, uint8_t value)
                                    497 ;	-----------------------------------------
                                    498 ;	 function setColumn
                                    499 ;	-----------------------------------------
      000252                        500 _setColumn:
      000252 52 05            [ 2]  501 	sub	sp, #5
                                    502 ;	user/max7219.c: 107: if(col < 0 || col > matrix.maxLed*8) return;
      000254 AEr00r05         [ 2]  503 	ldw	x, #_matrix+5
      000257 F6               [ 1]  504 	ld	a, (x)
      000258 5F               [ 1]  505 	clrw	x
      000259 97               [ 1]  506 	ld	xl, a
      00025A 58               [ 2]  507 	sllw	x
      00025B 58               [ 2]  508 	sllw	x
      00025C 58               [ 2]  509 	sllw	x
      00025D 7B 08            [ 1]  510 	ld	a, (0x08, sp)
      00025F 6B 03            [ 1]  511 	ld	(0x03, sp), a
      000261 0F 02            [ 1]  512 	clr	(0x02, sp)
      000263 13 02            [ 2]  513 	cpw	x, (0x02, sp)
                                    514 ;	user/max7219.c: 108: for(row = 0; row < 8; row++)
      000265 2F 2D            [ 1]  515 	jrslt	00107$
      000267 0F 01            [ 1]  516 	clr	(0x01, sp)
      000269                        517 00105$:
                                    518 ;	user/max7219.c: 110: val = value >> (7-row);
      000269 7B 01            [ 1]  519 	ld	a, (0x01, sp)
      00026B 6B 05            [ 1]  520 	ld	(0x05, sp), a
      00026D 0F 04            [ 1]  521 	clr	(0x04, sp)
      00026F AE 00 07         [ 2]  522 	ldw	x, #0x0007
      000272 72 F0 04         [ 2]  523 	subw	x, (0x04, sp)
      000275 7B 09            [ 1]  524 	ld	a, (0x09, sp)
      000277 88               [ 1]  525 	push	a
      000278 9F               [ 1]  526 	ld	a, xl
      000279 4D               [ 1]  527 	tnz	a
      00027A 27 05            [ 1]  528 	jreq	00120$
      00027C                        529 00119$:
      00027C 04 01            [ 1]  530 	srl	(1, sp)
      00027E 4A               [ 1]  531 	dec	a
      00027F 26 FB            [ 1]  532 	jrne	00119$
      000281                        533 00120$:
      000281 7B 02            [ 1]  534 	ld	a, (0x02, sp)
      000283 88               [ 1]  535 	push	a
      000284 7B 0A            [ 1]  536 	ld	a, (0x0a, sp)
      000286 88               [ 1]  537 	push	a
      000287 CDr01rE6         [ 4]  538 	call	_setDot
      00028A 5B 03            [ 2]  539 	addw	sp, #3
                                    540 ;	user/max7219.c: 108: for(row = 0; row < 8; row++)
      00028C 0C 01            [ 1]  541 	inc	(0x01, sp)
      00028E 7B 01            [ 1]  542 	ld	a, (0x01, sp)
      000290 A1 08            [ 1]  543 	cp	a, #0x08
      000292 25 D5            [ 1]  544 	jrc	00105$
      000294                        545 00107$:
      000294 5B 05            [ 2]  546 	addw	sp, #5
      000296 81               [ 4]  547 	ret
                                    548 ;	user/max7219.c: 115: void setRow(uint8_t row, uint8_t value)
                                    549 ;	-----------------------------------------
                                    550 ;	 function setRow
                                    551 ;	-----------------------------------------
      000297                        552 _setRow:
      000297 52 05            [ 2]  553 	sub	sp, #5
                                    554 ;	user/max7219.c: 118: if(row < 0 || row > 7) return;
      000299 7B 08            [ 1]  555 	ld	a, (0x08, sp)
      00029B A1 07            [ 1]  556 	cp	a, #0x07
                                    557 ;	user/max7219.c: 119: for(i = 0; i < matrix.maxLed; i++)
      00029D 22 2A            [ 1]  558 	jrugt	00108$
      00029F AEr00r00         [ 2]  559 	ldw	x, #_matrix+0
      0002A2 1F 02            [ 2]  560 	ldw	(0x02, sp), x
      0002A4 16 02            [ 2]  561 	ldw	y, (0x02, sp)
      0002A6 0F 01            [ 1]  562 	clr	(0x01, sp)
      0002A8                        563 00106$:
      0002A8 90 E6 05         [ 1]  564 	ld	a, (0x5, y)
      0002AB 11 01            [ 1]  565 	cp	a, (0x01, sp)
      0002AD 23 1A            [ 2]  566 	jrule	00108$
                                    567 ;	user/max7219.c: 121: offset = (i*8)+row;
      0002AF 7B 01            [ 1]  568 	ld	a, (0x01, sp)
      0002B1 48               [ 1]  569 	sll	a
      0002B2 48               [ 1]  570 	sll	a
      0002B3 48               [ 1]  571 	sll	a
      0002B4 1B 08            [ 1]  572 	add	a, (0x08, sp)
                                    573 ;	user/max7219.c: 122: matrix.buffer[offset] = value;
      0002B6 1E 02            [ 2]  574 	ldw	x, (0x02, sp)
      0002B8 1C 00 06         [ 2]  575 	addw	x, #0x0006
      0002BB 1F 04            [ 2]  576 	ldw	(0x04, sp), x
      0002BD 5F               [ 1]  577 	clrw	x
      0002BE 97               [ 1]  578 	ld	xl, a
      0002BF 72 FB 04         [ 2]  579 	addw	x, (0x04, sp)
      0002C2 7B 09            [ 1]  580 	ld	a, (0x09, sp)
      0002C4 F7               [ 1]  581 	ld	(x), a
                                    582 ;	user/max7219.c: 119: for(i = 0; i < matrix.maxLed; i++)
      0002C5 0C 01            [ 1]  583 	inc	(0x01, sp)
      0002C7 20 DF            [ 2]  584 	jra	00106$
      0002C9                        585 00108$:
      0002C9 5B 05            [ 2]  586 	addw	sp, #5
      0002CB 81               [ 4]  587 	ret
                                    588 ;	user/max7219.c: 126: void DrawEx(uint8_t scrollCnt, uint16_t *data)
                                    589 ;	-----------------------------------------
                                    590 ;	 function DrawEx
                                    591 ;	-----------------------------------------
      0002CC                        592 _DrawEx:
      0002CC 52 0C            [ 2]  593 	sub	sp, #12
                                    594 ;	user/max7219.c: 133: Clear();
      0002CE CDr01r50         [ 4]  595 	call	_Clear
                                    596 ;	user/max7219.c: 134: for(cntC = 0; cntC < matrix.maxLed*8; cntC++)
      0002D1 AEr00r05         [ 2]  597 	ldw	x, #_matrix+5
      0002D4 1F 0B            [ 2]  598 	ldw	(0x0b, sp), x
      0002D6 0F 04            [ 1]  599 	clr	(0x04, sp)
      0002D8                        600 00109$:
      0002D8 1E 0B            [ 2]  601 	ldw	x, (0x0b, sp)
      0002DA F6               [ 1]  602 	ld	a, (x)
      0002DB 5F               [ 1]  603 	clrw	x
      0002DC 97               [ 1]  604 	ld	xl, a
      0002DD 58               [ 2]  605 	sllw	x
      0002DE 58               [ 2]  606 	sllw	x
      0002DF 58               [ 2]  607 	sllw	x
      0002E0 1F 09            [ 2]  608 	ldw	(0x09, sp), x
      0002E2 7B 04            [ 1]  609 	ld	a, (0x04, sp)
      0002E4 6B 08            [ 1]  610 	ld	(0x08, sp), a
      0002E6 0F 07            [ 1]  611 	clr	(0x07, sp)
      0002E8 1E 07            [ 2]  612 	ldw	x, (0x07, sp)
      0002EA 13 09            [ 2]  613 	cpw	x, (0x09, sp)
      0002EC 2E 51            [ 1]  614 	jrsge	00111$
                                    615 ;	user/max7219.c: 136: dataGet = data[cntC+scrollCnt];
      0002EE 5F               [ 1]  616 	clrw	x
      0002EF 7B 0F            [ 1]  617 	ld	a, (0x0f, sp)
      0002F1 97               [ 1]  618 	ld	xl, a
      0002F2 72 FB 07         [ 2]  619 	addw	x, (0x07, sp)
      0002F5 58               [ 2]  620 	sllw	x
      0002F6 72 FB 10         [ 2]  621 	addw	x, (0x10, sp)
      0002F9 FE               [ 2]  622 	ldw	x, (x)
      0002FA 1F 01            [ 2]  623 	ldw	(0x01, sp), x
                                    624 ;	user/max7219.c: 137: mask = 0x0001;
      0002FC AE 00 01         [ 2]  625 	ldw	x, #0x0001
      0002FF 1F 05            [ 2]  626 	ldw	(0x05, sp), x
                                    627 ;	user/max7219.c: 138: for(cntR = 0; cntR<8; cntR++)
      000301 0F 03            [ 1]  628 	clr	(0x03, sp)
      000303                        629 00106$:
                                    630 ;	user/max7219.c: 141: setDot(cntC, 8 - cntR -1, 1);
      000303 A6 07            [ 1]  631 	ld	a, #0x07
      000305 10 03            [ 1]  632 	sub	a, (0x03, sp)
                                    633 ;	user/max7219.c: 140: if(dataGet&mask)
      000307 88               [ 1]  634 	push	a
      000308 7B 03            [ 1]  635 	ld	a, (0x03, sp)
      00030A 14 07            [ 1]  636 	and	a, (0x07, sp)
      00030C 97               [ 1]  637 	ld	xl, a
      00030D 7B 02            [ 1]  638 	ld	a, (0x02, sp)
      00030F 14 06            [ 1]  639 	and	a, (0x06, sp)
      000311 95               [ 1]  640 	ld	xh, a
      000312 84               [ 1]  641 	pop	a
      000313 5D               [ 2]  642 	tnzw	x
      000314 27 0D            [ 1]  643 	jreq	00102$
                                    644 ;	user/max7219.c: 141: setDot(cntC, 8 - cntR -1, 1);
      000316 4B 01            [ 1]  645 	push	#0x01
      000318 88               [ 1]  646 	push	a
      000319 7B 06            [ 1]  647 	ld	a, (0x06, sp)
      00031B 88               [ 1]  648 	push	a
      00031C CDr01rE6         [ 4]  649 	call	_setDot
      00031F 5B 03            [ 2]  650 	addw	sp, #3
      000321 20 0B            [ 2]  651 	jra	00103$
      000323                        652 00102$:
                                    653 ;	user/max7219.c: 143: setDot(cntC, 8 - cntR -1, 0);
      000323 4B 00            [ 1]  654 	push	#0x00
      000325 88               [ 1]  655 	push	a
      000326 7B 06            [ 1]  656 	ld	a, (0x06, sp)
      000328 88               [ 1]  657 	push	a
      000329 CDr01rE6         [ 4]  658 	call	_setDot
      00032C 5B 03            [ 2]  659 	addw	sp, #3
      00032E                        660 00103$:
                                    661 ;	user/max7219.c: 144: mask <<=1;
      00032E 1E 05            [ 2]  662 	ldw	x, (0x05, sp)
      000330 58               [ 2]  663 	sllw	x
      000331 1F 05            [ 2]  664 	ldw	(0x05, sp), x
                                    665 ;	user/max7219.c: 138: for(cntR = 0; cntR<8; cntR++)
      000333 0C 03            [ 1]  666 	inc	(0x03, sp)
      000335 7B 03            [ 1]  667 	ld	a, (0x03, sp)
      000337 A1 08            [ 1]  668 	cp	a, #0x08
      000339 25 C8            [ 1]  669 	jrc	00106$
                                    670 ;	user/max7219.c: 134: for(cntC = 0; cntC < matrix.maxLed*8; cntC++)
      00033B 0C 04            [ 1]  671 	inc	(0x04, sp)
      00033D 20 99            [ 2]  672 	jra	00109$
      00033F                        673 00111$:
      00033F 5B 0C            [ 2]  674 	addw	sp, #12
      000341 81               [ 4]  675 	ret
                                    676 	.area CODE
                                    677 	.area INITIALIZER
                                    678 	.area CABS (ABS)
