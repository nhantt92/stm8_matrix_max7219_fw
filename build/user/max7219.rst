                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module max7219
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memset
                                     12 	.globl _GPIO_WriteLow
                                     13 	.globl _GPIO_WriteHigh
                                     14 	.globl _GPIO_Init
                                     15 	.globl _matrix
                                     16 	.globl _MaxMatrix
                                     17 	.globl _setCommand
                                     18 	.globl _Init
                                     19 	.globl _setIntensity
                                     20 	.globl _Clear
                                     21 	.globl _Screen
                                     22 	.globl _setDot
                                     23 	.globl _setColumn
                                     24 	.globl _setRow
                                     25 	.globl _DrawEx
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DATA
      000001                         30 _matrix::
      000001                         31 	.ds 86
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area INITIALIZED
                                     36 ;--------------------------------------------------------
                                     37 ; absolute external ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area DABS (ABS)
                                     40 ;--------------------------------------------------------
                                     41 ; global & static initialisations
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area GSINIT
                                     45 	.area GSFINAL
                                     46 	.area GSINIT
                                     47 ;--------------------------------------------------------
                                     48 ; Home
                                     49 ;--------------------------------------------------------
                                     50 	.area HOME
                                     51 	.area HOME
                                     52 ;--------------------------------------------------------
                                     53 ; code
                                     54 ;--------------------------------------------------------
                                     55 	.area CODE
                                     56 ;	user/max7219.c: 7: static void delay_ms(uint8_t x)
                                     57 ;	-----------------------------------------
                                     58 ;	 function delay_ms
                                     59 ;	-----------------------------------------
      008350                         60 _delay_ms:
      008350 88               [ 1]   61 	push	a
                                     62 ;	user/max7219.c: 9: while(x--);
      008351 7B 04            [ 1]   63 	ld	a, (0x04, sp)
      008353                         64 00101$:
      008353 6B 01            [ 1]   65 	ld	(0x01, sp), a
      008355 4A               [ 1]   66 	dec	a
      008356 0D 01            [ 1]   67 	tnz	(0x01, sp)
      008358 26 F9            [ 1]   68 	jrne	00101$
      00835A 84               [ 1]   69 	pop	a
      00835B 81               [ 4]   70 	ret
                                     71 ;	user/max7219.c: 12: void MaxMatrix(GPIO_TypeDef* port, uint8_t data, uint8_t cs, uint8_t clk, uint8_t numLed)
                                     72 ;	-----------------------------------------
                                     73 ;	 function MaxMatrix
                                     74 ;	-----------------------------------------
      00835C                         75 _MaxMatrix:
      00835C 89               [ 2]   76 	pushw	x
                                     77 ;	user/max7219.c: 14: matrix.port = port;
      00835D AE 00 01         [ 2]   78 	ldw	x, #_matrix+0
      008360 16 05            [ 2]   79 	ldw	y, (0x05, sp)
      008362 FF               [ 2]   80 	ldw	(x), y
                                     81 ;	user/max7219.c: 15: matrix.data = data;
      008363 AE 00 01         [ 2]   82 	ldw	x, #_matrix+0
      008366 1F 01            [ 2]   83 	ldw	(0x01, sp), x
      008368 1E 01            [ 2]   84 	ldw	x, (0x01, sp)
      00836A 5C               [ 2]   85 	incw	x
      00836B 5C               [ 2]   86 	incw	x
      00836C 7B 07            [ 1]   87 	ld	a, (0x07, sp)
      00836E F7               [ 1]   88 	ld	(x), a
                                     89 ;	user/max7219.c: 16: matrix.cs = cs;
      00836F 1E 01            [ 2]   90 	ldw	x, (0x01, sp)
      008371 7B 08            [ 1]   91 	ld	a, (0x08, sp)
      008373 E7 03            [ 1]   92 	ld	(0x0003, x), a
                                     93 ;	user/max7219.c: 17: matrix.clk = clk;
      008375 1E 01            [ 2]   94 	ldw	x, (0x01, sp)
      008377 7B 09            [ 1]   95 	ld	a, (0x09, sp)
      008379 E7 04            [ 1]   96 	ld	(0x0004, x), a
                                     97 ;	user/max7219.c: 18: matrix.maxLed =  numLed;
      00837B 1E 01            [ 2]   98 	ldw	x, (0x01, sp)
      00837D 7B 0A            [ 1]   99 	ld	a, (0x0a, sp)
      00837F E7 05            [ 1]  100 	ld	(0x0005, x), a
                                    101 ;	user/max7219.c: 19: memset(matrix.buffer, 0x00, sizeof(matrix.buffer));
      008381 1E 01            [ 2]  102 	ldw	x, (0x01, sp)
      008383 1C 00 06         [ 2]  103 	addw	x, #0x0006
      008386 4B 50            [ 1]  104 	push	#0x50
      008388 4B 00            [ 1]  105 	push	#0x00
      00838A 4B 00            [ 1]  106 	push	#0x00
      00838C 4B 00            [ 1]  107 	push	#0x00
      00838E 89               [ 2]  108 	pushw	x
      00838F CD 8E FF         [ 4]  109 	call	_memset
      008392 5B 08            [ 2]  110 	addw	sp, #8
      008394 81               [ 4]  111 	ret
                                    112 ;	user/max7219.c: 22: static void Max7219_Write_Byte(uint8_t dat)
                                    113 ;	-----------------------------------------
                                    114 ;	 function Max7219_Write_Byte
                                    115 ;	-----------------------------------------
      008395                        116 _Max7219_Write_Byte:
      008395 52 06            [ 2]  117 	sub	sp, #6
                                    118 ;	user/max7219.c: 26: dsent = dat;
      008397 7B 09            [ 1]  119 	ld	a, (0x09, sp)
      008399 6B 02            [ 1]  120 	ld	(0x02, sp), a
                                    121 ;	user/max7219.c: 27: for(cnt=0; cnt<8; cnt++)
      00839B AE 00 01         [ 2]  122 	ldw	x, #_matrix+0
      00839E 1F 03            [ 2]  123 	ldw	(0x03, sp), x
      0083A0 1E 03            [ 2]  124 	ldw	x, (0x03, sp)
      0083A2 1C 00 04         [ 2]  125 	addw	x, #0x0004
      0083A5 1F 05            [ 2]  126 	ldw	(0x05, sp), x
      0083A7 0F 01            [ 1]  127 	clr	(0x01, sp)
      0083A9                        128 00105$:
                                    129 ;	user/max7219.c: 29: GPIO_WriteLow(matrix.port, matrix.clk);
      0083A9 1E 05            [ 2]  130 	ldw	x, (0x05, sp)
      0083AB F6               [ 1]  131 	ld	a, (x)
      0083AC 1E 03            [ 2]  132 	ldw	x, (0x03, sp)
      0083AE FE               [ 2]  133 	ldw	x, (x)
      0083AF 88               [ 1]  134 	push	a
      0083B0 89               [ 2]  135 	pushw	x
      0083B1 CD 8C 1E         [ 4]  136 	call	_GPIO_WriteLow
      0083B4 5B 03            [ 2]  137 	addw	sp, #3
      0083B6 1E 03            [ 2]  138 	ldw	x, (0x03, sp)
      0083B8 FE               [ 2]  139 	ldw	x, (x)
                                    140 ;	user/max7219.c: 31: GPIO_WriteHigh(matrix.port, matrix.data);
      0083B9 16 03            [ 2]  141 	ldw	y, (0x03, sp)
      0083BB 90 E6 02         [ 1]  142 	ld	a, (0x2, y)
                                    143 ;	user/max7219.c: 30: if(dsent&0x80)
      0083BE 0D 02            [ 1]  144 	tnz	(0x02, sp)
      0083C0 2A 09            [ 1]  145 	jrpl	00102$
                                    146 ;	user/max7219.c: 31: GPIO_WriteHigh(matrix.port, matrix.data);
      0083C2 88               [ 1]  147 	push	a
      0083C3 89               [ 2]  148 	pushw	x
      0083C4 CD 8C 17         [ 4]  149 	call	_GPIO_WriteHigh
      0083C7 5B 03            [ 2]  150 	addw	sp, #3
      0083C9 20 07            [ 2]  151 	jra	00103$
      0083CB                        152 00102$:
                                    153 ;	user/max7219.c: 33: GPIO_WriteLow(matrix.port, matrix.data);
      0083CB 88               [ 1]  154 	push	a
      0083CC 89               [ 2]  155 	pushw	x
      0083CD CD 8C 1E         [ 4]  156 	call	_GPIO_WriteLow
      0083D0 5B 03            [ 2]  157 	addw	sp, #3
      0083D2                        158 00103$:
                                    159 ;	user/max7219.c: 34: GPIO_WriteHigh(matrix.port, matrix.clk);
      0083D2 1E 05            [ 2]  160 	ldw	x, (0x05, sp)
      0083D4 F6               [ 1]  161 	ld	a, (x)
      0083D5 1E 03            [ 2]  162 	ldw	x, (0x03, sp)
      0083D7 FE               [ 2]  163 	ldw	x, (x)
      0083D8 88               [ 1]  164 	push	a
      0083D9 89               [ 2]  165 	pushw	x
      0083DA CD 8C 17         [ 4]  166 	call	_GPIO_WriteHigh
      0083DD 5B 03            [ 2]  167 	addw	sp, #3
                                    168 ;	user/max7219.c: 35: dsent <<= 1;
      0083DF 08 02            [ 1]  169 	sll	(0x02, sp)
                                    170 ;	user/max7219.c: 27: for(cnt=0; cnt<8; cnt++)
      0083E1 0C 01            [ 1]  171 	inc	(0x01, sp)
      0083E3 7B 01            [ 1]  172 	ld	a, (0x01, sp)
      0083E5 A1 08            [ 1]  173 	cp	a, #0x08
      0083E7 25 C0            [ 1]  174 	jrc	00105$
      0083E9 5B 06            [ 2]  175 	addw	sp, #6
      0083EB 81               [ 4]  176 	ret
                                    177 ;	user/max7219.c: 39: void setCommand(uint8_t command, uint8_t value)
                                    178 ;	-----------------------------------------
                                    179 ;	 function setCommand
                                    180 ;	-----------------------------------------
      0083EC                        181 _setCommand:
      0083EC 52 07            [ 2]  182 	sub	sp, #7
                                    183 ;	user/max7219.c: 42: GPIO_WriteLow(matrix.port, matrix.cs);
      0083EE AE 00 01         [ 2]  184 	ldw	x, #_matrix+0
      0083F1 1F 02            [ 2]  185 	ldw	(0x02, sp), x
      0083F3 1E 02            [ 2]  186 	ldw	x, (0x02, sp)
      0083F5 1C 00 03         [ 2]  187 	addw	x, #0x0003
      0083F8 1F 04            [ 2]  188 	ldw	(0x04, sp), x
      0083FA 1E 04            [ 2]  189 	ldw	x, (0x04, sp)
      0083FC F6               [ 1]  190 	ld	a, (x)
      0083FD 1E 02            [ 2]  191 	ldw	x, (0x02, sp)
      0083FF FE               [ 2]  192 	ldw	x, (x)
      008400 88               [ 1]  193 	push	a
      008401 89               [ 2]  194 	pushw	x
      008402 CD 8C 1E         [ 4]  195 	call	_GPIO_WriteLow
      008405 5B 03            [ 2]  196 	addw	sp, #3
                                    197 ;	user/max7219.c: 43: for(i = 0; i < matrix.maxLed; i++)
      008407 16 02            [ 2]  198 	ldw	y, (0x02, sp)
      008409 17 06            [ 2]  199 	ldw	(0x06, sp), y
      00840B 0F 01            [ 1]  200 	clr	(0x01, sp)
      00840D                        201 00103$:
      00840D 1E 06            [ 2]  202 	ldw	x, (0x06, sp)
      00840F E6 05            [ 1]  203 	ld	a, (0x5, x)
      008411 11 01            [ 1]  204 	cp	a, (0x01, sp)
      008413 23 12            [ 2]  205 	jrule	00101$
                                    206 ;	user/max7219.c: 45: Max7219_Write_Byte(command);
      008415 7B 0A            [ 1]  207 	ld	a, (0x0a, sp)
      008417 88               [ 1]  208 	push	a
      008418 CD 83 95         [ 4]  209 	call	_Max7219_Write_Byte
      00841B 84               [ 1]  210 	pop	a
                                    211 ;	user/max7219.c: 46: Max7219_Write_Byte(value);
      00841C 7B 0B            [ 1]  212 	ld	a, (0x0b, sp)
      00841E 88               [ 1]  213 	push	a
      00841F CD 83 95         [ 4]  214 	call	_Max7219_Write_Byte
      008422 84               [ 1]  215 	pop	a
                                    216 ;	user/max7219.c: 43: for(i = 0; i < matrix.maxLed; i++)
      008423 0C 01            [ 1]  217 	inc	(0x01, sp)
      008425 20 E6            [ 2]  218 	jra	00103$
      008427                        219 00101$:
                                    220 ;	user/max7219.c: 48: GPIO_WriteLow(matrix.port, matrix.cs);
      008427 1E 04            [ 2]  221 	ldw	x, (0x04, sp)
      008429 F6               [ 1]  222 	ld	a, (x)
      00842A 1E 02            [ 2]  223 	ldw	x, (0x02, sp)
      00842C FE               [ 2]  224 	ldw	x, (x)
      00842D 88               [ 1]  225 	push	a
      00842E 89               [ 2]  226 	pushw	x
      00842F CD 8C 1E         [ 4]  227 	call	_GPIO_WriteLow
      008432 5B 03            [ 2]  228 	addw	sp, #3
                                    229 ;	user/max7219.c: 49: GPIO_WriteHigh(matrix.port, matrix.cs);
      008434 1E 04            [ 2]  230 	ldw	x, (0x04, sp)
      008436 F6               [ 1]  231 	ld	a, (x)
      008437 1E 02            [ 2]  232 	ldw	x, (0x02, sp)
      008439 FE               [ 2]  233 	ldw	x, (x)
      00843A 88               [ 1]  234 	push	a
      00843B 89               [ 2]  235 	pushw	x
      00843C CD 8C 17         [ 4]  236 	call	_GPIO_WriteHigh
      00843F 5B 0A            [ 2]  237 	addw	sp, #10
      008441 81               [ 4]  238 	ret
                                    239 ;	user/max7219.c: 52: void Init(void)
                                    240 ;	-----------------------------------------
                                    241 ;	 function Init
                                    242 ;	-----------------------------------------
      008442                        243 _Init:
      008442 52 04            [ 2]  244 	sub	sp, #4
                                    245 ;	user/max7219.c: 54: GPIO_Init(matrix.port, matrix.data|matrix.cs|matrix.clk, GPIO_MODE_OUT_PP_HIGH_FAST);
      008444 AE 00 01         [ 2]  246 	ldw	x, #_matrix+0
      008447 1F 03            [ 2]  247 	ldw	(0x03, sp), x
      008449 1E 03            [ 2]  248 	ldw	x, (0x03, sp)
      00844B E6 02            [ 1]  249 	ld	a, (0x2, x)
      00844D 6B 02            [ 1]  250 	ld	(0x02, sp), a
      00844F 1E 03            [ 2]  251 	ldw	x, (0x03, sp)
      008451 E6 03            [ 1]  252 	ld	a, (0x3, x)
      008453 1A 02            [ 1]  253 	or	a, (0x02, sp)
      008455 6B 01            [ 1]  254 	ld	(0x01, sp), a
      008457 1E 03            [ 2]  255 	ldw	x, (0x03, sp)
      008459 E6 04            [ 1]  256 	ld	a, (0x4, x)
      00845B 1A 01            [ 1]  257 	or	a, (0x01, sp)
      00845D 1E 03            [ 2]  258 	ldw	x, (0x03, sp)
      00845F FE               [ 2]  259 	ldw	x, (x)
      008460 4B F0            [ 1]  260 	push	#0xf0
      008462 88               [ 1]  261 	push	a
      008463 89               [ 2]  262 	pushw	x
      008464 CD 8B 83         [ 4]  263 	call	_GPIO_Init
      008467 5B 04            [ 2]  264 	addw	sp, #4
                                    265 ;	user/max7219.c: 55: setCommand(SCANLIMIT, 0x07); //scanf 8digit
      008469 4B 07            [ 1]  266 	push	#0x07
      00846B 4B 0B            [ 1]  267 	push	#0x0b
      00846D CD 83 EC         [ 4]  268 	call	_setCommand
      008470 85               [ 2]  269 	popw	x
                                    270 ;	user/max7219.c: 56: setCommand(DECODEMODE, 0x00); //use led matrix, not decode digit
      008471 4B 00            [ 1]  271 	push	#0x00
      008473 4B 09            [ 1]  272 	push	#0x09
      008475 CD 83 EC         [ 4]  273 	call	_setCommand
      008478 85               [ 2]  274 	popw	x
                                    275 ;	user/max7219.c: 57: setCommand(SHUTDOWN, 0x01); // normal operator
      008479 4B 01            [ 1]  276 	push	#0x01
      00847B 4B 0C            [ 1]  277 	push	#0x0c
      00847D CD 83 EC         [ 4]  278 	call	_setCommand
      008480 85               [ 2]  279 	popw	x
                                    280 ;	user/max7219.c: 58: setCommand(DISPLAYTEST, 0x00); //no display test
      008481 4B 00            [ 1]  281 	push	#0x00
      008483 4B 0F            [ 1]  282 	push	#0x0f
      008485 CD 83 EC         [ 4]  283 	call	_setCommand
      008488 85               [ 2]  284 	popw	x
                                    285 ;	user/max7219.c: 59: Clear();
      008489 CD 84 A0         [ 4]  286 	call	_Clear
                                    287 ;	user/max7219.c: 60: setCommand(INTENSITY, 0x04); // brightness 9/32
      00848C 4B 04            [ 1]  288 	push	#0x04
      00848E 4B 0A            [ 1]  289 	push	#0x0a
      008490 CD 83 EC         [ 4]  290 	call	_setCommand
      008493 5B 06            [ 2]  291 	addw	sp, #6
      008495 81               [ 4]  292 	ret
                                    293 ;	user/max7219.c: 63: void setIntensity(uint8_t intensity)
                                    294 ;	-----------------------------------------
                                    295 ;	 function setIntensity
                                    296 ;	-----------------------------------------
      008496                        297 _setIntensity:
                                    298 ;	user/max7219.c: 65: setCommand(INTENSITY, intensity);
      008496 7B 03            [ 1]  299 	ld	a, (0x03, sp)
      008498 88               [ 1]  300 	push	a
      008499 4B 0A            [ 1]  301 	push	#0x0a
      00849B CD 83 EC         [ 4]  302 	call	_setCommand
      00849E 85               [ 2]  303 	popw	x
      00849F 81               [ 4]  304 	ret
                                    305 ;	user/max7219.c: 68: void Clear(void)
                                    306 ;	-----------------------------------------
                                    307 ;	 function Clear
                                    308 ;	-----------------------------------------
      0084A0                        309 _Clear:
                                    310 ;	user/max7219.c: 70: memset(matrix.buffer, 0x00, sizeof(matrix.buffer));
      0084A0 AE 00 07         [ 2]  311 	ldw	x, #_matrix+6
      0084A3 4B 50            [ 1]  312 	push	#0x50
      0084A5 4B 00            [ 1]  313 	push	#0x00
      0084A7 4B 00            [ 1]  314 	push	#0x00
      0084A9 4B 00            [ 1]  315 	push	#0x00
      0084AB 89               [ 2]  316 	pushw	x
      0084AC CD 8E FF         [ 4]  317 	call	_memset
      0084AF 5B 06            [ 2]  318 	addw	sp, #6
      0084B1 81               [ 4]  319 	ret
                                    320 ;	user/max7219.c: 73: void Screen(void)
                                    321 ;	-----------------------------------------
                                    322 ;	 function Screen
                                    323 ;	-----------------------------------------
      0084B2                        324 _Screen:
      0084B2 52 0D            [ 2]  325 	sub	sp, #13
                                    326 ;	user/max7219.c: 76: for(i = 0; i < 8; i++)
      0084B4 AE 00 01         [ 2]  327 	ldw	x, #_matrix+0
      0084B7 1F 03            [ 2]  328 	ldw	(0x03, sp), x
      0084B9 1E 03            [ 2]  329 	ldw	x, (0x03, sp)
      0084BB 1C 00 03         [ 2]  330 	addw	x, #0x0003
      0084BE 1F 0B            [ 2]  331 	ldw	(0x0b, sp), x
      0084C0 0F 02            [ 1]  332 	clr	(0x02, sp)
      0084C2                        333 00106$:
                                    334 ;	user/max7219.c: 79: GPIO_WriteLow(matrix.port, matrix.cs);
      0084C2 1E 0B            [ 2]  335 	ldw	x, (0x0b, sp)
      0084C4 F6               [ 1]  336 	ld	a, (x)
      0084C5 1E 03            [ 2]  337 	ldw	x, (0x03, sp)
      0084C7 FE               [ 2]  338 	ldw	x, (x)
      0084C8 88               [ 1]  339 	push	a
      0084C9 89               [ 2]  340 	pushw	x
      0084CA CD 8C 1E         [ 4]  341 	call	_GPIO_WriteLow
      0084CD 5B 03            [ 2]  342 	addw	sp, #3
                                    343 ;	user/max7219.c: 80: for(j = 0; j < matrix.maxLed; j++)
      0084CF 7B 02            [ 1]  344 	ld	a, (0x02, sp)
      0084D1 4C               [ 1]  345 	inc	a
      0084D2 6B 05            [ 1]  346 	ld	(0x05, sp), a
      0084D4 7B 05            [ 1]  347 	ld	a, (0x05, sp)
      0084D6 6B 08            [ 1]  348 	ld	(0x08, sp), a
      0084D8 1E 03            [ 2]  349 	ldw	x, (0x03, sp)
      0084DA 1C 00 06         [ 2]  350 	addw	x, #0x0006
      0084DD 1F 06            [ 2]  351 	ldw	(0x06, sp), x
      0084DF 16 03            [ 2]  352 	ldw	y, (0x03, sp)
      0084E1 17 09            [ 2]  353 	ldw	(0x09, sp), y
      0084E3 7B 02            [ 1]  354 	ld	a, (0x02, sp)
      0084E5 6B 0D            [ 1]  355 	ld	(0x0d, sp), a
      0084E7 0F 01            [ 1]  356 	clr	(0x01, sp)
      0084E9                        357 00104$:
      0084E9 1E 09            [ 2]  358 	ldw	x, (0x09, sp)
      0084EB E6 05            [ 1]  359 	ld	a, (0x5, x)
      0084ED 11 01            [ 1]  360 	cp	a, (0x01, sp)
      0084EF 23 1E            [ 2]  361 	jrule	00101$
                                    362 ;	user/max7219.c: 82: Max7219_Write_Byte(i+1);
      0084F1 7B 08            [ 1]  363 	ld	a, (0x08, sp)
      0084F3 88               [ 1]  364 	push	a
      0084F4 CD 83 95         [ 4]  365 	call	_Max7219_Write_Byte
      0084F7 84               [ 1]  366 	pop	a
                                    367 ;	user/max7219.c: 83: Max7219_Write_Byte(matrix.buffer[col]);
      0084F8 5F               [ 1]  368 	clrw	x
      0084F9 7B 0D            [ 1]  369 	ld	a, (0x0d, sp)
      0084FB 97               [ 1]  370 	ld	xl, a
      0084FC 72 FB 06         [ 2]  371 	addw	x, (0x06, sp)
      0084FF F6               [ 1]  372 	ld	a, (x)
      008500 88               [ 1]  373 	push	a
      008501 CD 83 95         [ 4]  374 	call	_Max7219_Write_Byte
      008504 84               [ 1]  375 	pop	a
                                    376 ;	user/max7219.c: 84: col += 8;
      008505 7B 0D            [ 1]  377 	ld	a, (0x0d, sp)
      008507 AB 08            [ 1]  378 	add	a, #0x08
      008509 6B 0D            [ 1]  379 	ld	(0x0d, sp), a
                                    380 ;	user/max7219.c: 80: for(j = 0; j < matrix.maxLed; j++)
      00850B 0C 01            [ 1]  381 	inc	(0x01, sp)
      00850D 20 DA            [ 2]  382 	jra	00104$
      00850F                        383 00101$:
                                    384 ;	user/max7219.c: 86: GPIO_WriteLow(matrix.port, matrix.cs);
      00850F 1E 0B            [ 2]  385 	ldw	x, (0x0b, sp)
      008511 F6               [ 1]  386 	ld	a, (x)
      008512 1E 03            [ 2]  387 	ldw	x, (0x03, sp)
      008514 FE               [ 2]  388 	ldw	x, (x)
      008515 88               [ 1]  389 	push	a
      008516 89               [ 2]  390 	pushw	x
      008517 CD 8C 1E         [ 4]  391 	call	_GPIO_WriteLow
      00851A 5B 03            [ 2]  392 	addw	sp, #3
                                    393 ;	user/max7219.c: 87: GPIO_WriteHigh(matrix.port, matrix.cs);
      00851C 1E 0B            [ 2]  394 	ldw	x, (0x0b, sp)
      00851E F6               [ 1]  395 	ld	a, (x)
      00851F 1E 03            [ 2]  396 	ldw	x, (0x03, sp)
      008521 FE               [ 2]  397 	ldw	x, (x)
      008522 88               [ 1]  398 	push	a
      008523 89               [ 2]  399 	pushw	x
      008524 CD 8C 17         [ 4]  400 	call	_GPIO_WriteHigh
      008527 5B 03            [ 2]  401 	addw	sp, #3
                                    402 ;	user/max7219.c: 76: for(i = 0; i < 8; i++)
      008529 7B 05            [ 1]  403 	ld	a, (0x05, sp)
      00852B 6B 02            [ 1]  404 	ld	(0x02, sp), a
      00852D 7B 05            [ 1]  405 	ld	a, (0x05, sp)
      00852F A1 08            [ 1]  406 	cp	a, #0x08
      008531 25 8F            [ 1]  407 	jrc	00106$
      008533 5B 0D            [ 2]  408 	addw	sp, #13
      008535 81               [ 4]  409 	ret
                                    410 ;	user/max7219.c: 91: void setDot(uint8_t col, uint8_t row, uint8_t value)
                                    411 ;	-----------------------------------------
                                    412 ;	 function setDot
                                    413 ;	-----------------------------------------
      008536                        414 _setDot:
      008536 52 07            [ 2]  415 	sub	sp, #7
                                    416 ;	user/max7219.c: 94: uint8_t n = (matrix.maxLed - 1) - (col / 8);
      008538 AE 00 01         [ 2]  417 	ldw	x, #_matrix+0
      00853B 1F 06            [ 2]  418 	ldw	(0x06, sp), x
      00853D 1E 06            [ 2]  419 	ldw	x, (0x06, sp)
      00853F E6 05            [ 1]  420 	ld	a, (0x5, x)
      008541 97               [ 1]  421 	ld	xl, a
      008542 4A               [ 1]  422 	dec	a
      008543 95               [ 1]  423 	ld	xh, a
      008544 7B 0A            [ 1]  424 	ld	a, (0x0a, sp)
      008546 44               [ 1]  425 	srl	a
      008547 44               [ 1]  426 	srl	a
      008548 44               [ 1]  427 	srl	a
      008549 6B 03            [ 1]  428 	ld	(0x03, sp), a
      00854B 9E               [ 1]  429 	ld	a, xh
      00854C 10 03            [ 1]  430 	sub	a, (0x03, sp)
                                    431 ;	user/max7219.c: 95: offset = (n*8 + row);
      00854E 48               [ 1]  432 	sll	a
      00854F 48               [ 1]  433 	sll	a
      008550 48               [ 1]  434 	sll	a
      008551 1B 0B            [ 1]  435 	add	a, (0x0b, sp)
      008553 6B 01            [ 1]  436 	ld	(0x01, sp), a
                                    437 ;	user/max7219.c: 96: val = 0x01 << (col%8);
      008555 7B 0A            [ 1]  438 	ld	a, (0x0a, sp)
      008557 A4 07            [ 1]  439 	and	a, #0x07
      008559 61               [ 1]  440 	exg	a, yl
      00855A A6 01            [ 1]  441 	ld	a, #0x01
      00855C 61               [ 1]  442 	exg	a, yl
      00855D 4D               [ 1]  443 	tnz	a
      00855E 27 06            [ 1]  444 	jreq	00120$
      008560                        445 00119$:
      008560 61               [ 1]  446 	exg	a, yl
      008561 48               [ 1]  447 	sll	a
      008562 61               [ 1]  448 	exg	a, yl
      008563 4A               [ 1]  449 	dec	a
      008564 26 FA            [ 1]  450 	jrne	00119$
      008566                        451 00120$:
                                    452 ;	user/max7219.c: 97: if(row < 0 || row > 7 || col < 0 || col > matrix.maxLed*8) return;
      008566 7B 0B            [ 1]  453 	ld	a, (0x0b, sp)
      008568 A1 07            [ 1]  454 	cp	a, #0x07
      00856A 22 33            [ 1]  455 	jrugt	00109$
      00856C 4F               [ 1]  456 	clr	a
      00856D 95               [ 1]  457 	ld	xh, a
      00856E 58               [ 2]  458 	sllw	x
      00856F 58               [ 2]  459 	sllw	x
      008570 58               [ 2]  460 	sllw	x
      008571 7B 0A            [ 1]  461 	ld	a, (0x0a, sp)
      008573 6B 05            [ 1]  462 	ld	(0x05, sp), a
      008575 0F 04            [ 1]  463 	clr	(0x04, sp)
      008577 13 04            [ 2]  464 	cpw	x, (0x04, sp)
      008579 2F 24            [ 1]  465 	jrslt	00109$
                                    466 ;	user/max7219.c: 99: matrix.buffer[offset] |= val;
      00857B 1E 06            [ 2]  467 	ldw	x, (0x06, sp)
      00857D 1C 00 06         [ 2]  468 	addw	x, #0x0006
      008580 9F               [ 1]  469 	ld	a, xl
      008581 1B 01            [ 1]  470 	add	a, (0x01, sp)
      008583 02               [ 1]  471 	rlwa	x
      008584 A9 00            [ 1]  472 	adc	a, #0x00
      008586 95               [ 1]  473 	ld	xh, a
      008587 F6               [ 1]  474 	ld	a, (x)
                                    475 ;	user/max7219.c: 98: if(value)
      008588 0D 0C            [ 1]  476 	tnz	(0x0c, sp)
      00858A 27 09            [ 1]  477 	jreq	00107$
                                    478 ;	user/max7219.c: 99: matrix.buffer[offset] |= val;
      00858C 90 89            [ 2]  479 	pushw	y
      00858E 1A 02            [ 1]  480 	or	a, (2, sp)
      008590 90 85            [ 2]  481 	popw	y
      008592 F7               [ 1]  482 	ld	(x), a
      008593 20 0A            [ 2]  483 	jra	00109$
      008595                        484 00107$:
                                    485 ;	user/max7219.c: 101: matrix.buffer[offset] &= ~val;
      008595 88               [ 1]  486 	push	a
      008596 90 9F            [ 1]  487 	ld	a, yl
      008598 43               [ 1]  488 	cpl	a
      008599 6B 03            [ 1]  489 	ld	(0x03, sp), a
      00859B 84               [ 1]  490 	pop	a
      00859C 14 02            [ 1]  491 	and	a, (0x02, sp)
      00859E F7               [ 1]  492 	ld	(x), a
      00859F                        493 00109$:
      00859F 5B 07            [ 2]  494 	addw	sp, #7
      0085A1 81               [ 4]  495 	ret
                                    496 ;	user/max7219.c: 104: void setColumn(uint8_t col, uint8_t value)
                                    497 ;	-----------------------------------------
                                    498 ;	 function setColumn
                                    499 ;	-----------------------------------------
      0085A2                        500 _setColumn:
      0085A2 52 05            [ 2]  501 	sub	sp, #5
                                    502 ;	user/max7219.c: 107: if(col < 0 || col > matrix.maxLed*8) return;
      0085A4 AE 00 06         [ 2]  503 	ldw	x, #_matrix+5
      0085A7 F6               [ 1]  504 	ld	a, (x)
      0085A8 5F               [ 1]  505 	clrw	x
      0085A9 97               [ 1]  506 	ld	xl, a
      0085AA 58               [ 2]  507 	sllw	x
      0085AB 58               [ 2]  508 	sllw	x
      0085AC 58               [ 2]  509 	sllw	x
      0085AD 7B 08            [ 1]  510 	ld	a, (0x08, sp)
      0085AF 6B 03            [ 1]  511 	ld	(0x03, sp), a
      0085B1 0F 02            [ 1]  512 	clr	(0x02, sp)
      0085B3 13 02            [ 2]  513 	cpw	x, (0x02, sp)
                                    514 ;	user/max7219.c: 108: for(row = 0; row < 8; row++)
      0085B5 2F 2D            [ 1]  515 	jrslt	00107$
      0085B7 0F 01            [ 1]  516 	clr	(0x01, sp)
      0085B9                        517 00105$:
                                    518 ;	user/max7219.c: 110: val = value >> (7-row);
      0085B9 7B 01            [ 1]  519 	ld	a, (0x01, sp)
      0085BB 6B 05            [ 1]  520 	ld	(0x05, sp), a
      0085BD 0F 04            [ 1]  521 	clr	(0x04, sp)
      0085BF AE 00 07         [ 2]  522 	ldw	x, #0x0007
      0085C2 72 F0 04         [ 2]  523 	subw	x, (0x04, sp)
      0085C5 7B 09            [ 1]  524 	ld	a, (0x09, sp)
      0085C7 88               [ 1]  525 	push	a
      0085C8 9F               [ 1]  526 	ld	a, xl
      0085C9 4D               [ 1]  527 	tnz	a
      0085CA 27 05            [ 1]  528 	jreq	00120$
      0085CC                        529 00119$:
      0085CC 04 01            [ 1]  530 	srl	(1, sp)
      0085CE 4A               [ 1]  531 	dec	a
      0085CF 26 FB            [ 1]  532 	jrne	00119$
      0085D1                        533 00120$:
      0085D1 7B 02            [ 1]  534 	ld	a, (0x02, sp)
      0085D3 88               [ 1]  535 	push	a
      0085D4 7B 0A            [ 1]  536 	ld	a, (0x0a, sp)
      0085D6 88               [ 1]  537 	push	a
      0085D7 CD 85 36         [ 4]  538 	call	_setDot
      0085DA 5B 03            [ 2]  539 	addw	sp, #3
                                    540 ;	user/max7219.c: 108: for(row = 0; row < 8; row++)
      0085DC 0C 01            [ 1]  541 	inc	(0x01, sp)
      0085DE 7B 01            [ 1]  542 	ld	a, (0x01, sp)
      0085E0 A1 08            [ 1]  543 	cp	a, #0x08
      0085E2 25 D5            [ 1]  544 	jrc	00105$
      0085E4                        545 00107$:
      0085E4 5B 05            [ 2]  546 	addw	sp, #5
      0085E6 81               [ 4]  547 	ret
                                    548 ;	user/max7219.c: 115: void setRow(uint8_t row, uint8_t value)
                                    549 ;	-----------------------------------------
                                    550 ;	 function setRow
                                    551 ;	-----------------------------------------
      0085E7                        552 _setRow:
      0085E7 52 05            [ 2]  553 	sub	sp, #5
                                    554 ;	user/max7219.c: 118: if(row < 0 || row > 7) return;
      0085E9 7B 08            [ 1]  555 	ld	a, (0x08, sp)
      0085EB A1 07            [ 1]  556 	cp	a, #0x07
                                    557 ;	user/max7219.c: 119: for(i = 0; i < matrix.maxLed; i++)
      0085ED 22 2A            [ 1]  558 	jrugt	00108$
      0085EF AE 00 01         [ 2]  559 	ldw	x, #_matrix+0
      0085F2 1F 02            [ 2]  560 	ldw	(0x02, sp), x
      0085F4 16 02            [ 2]  561 	ldw	y, (0x02, sp)
      0085F6 0F 01            [ 1]  562 	clr	(0x01, sp)
      0085F8                        563 00106$:
      0085F8 90 E6 05         [ 1]  564 	ld	a, (0x5, y)
      0085FB 11 01            [ 1]  565 	cp	a, (0x01, sp)
      0085FD 23 1A            [ 2]  566 	jrule	00108$
                                    567 ;	user/max7219.c: 121: offset = (i*8)+row;
      0085FF 7B 01            [ 1]  568 	ld	a, (0x01, sp)
      008601 48               [ 1]  569 	sll	a
      008602 48               [ 1]  570 	sll	a
      008603 48               [ 1]  571 	sll	a
      008604 1B 08            [ 1]  572 	add	a, (0x08, sp)
                                    573 ;	user/max7219.c: 122: matrix.buffer[offset] = value;
      008606 1E 02            [ 2]  574 	ldw	x, (0x02, sp)
      008608 1C 00 06         [ 2]  575 	addw	x, #0x0006
      00860B 1F 04            [ 2]  576 	ldw	(0x04, sp), x
      00860D 5F               [ 1]  577 	clrw	x
      00860E 97               [ 1]  578 	ld	xl, a
      00860F 72 FB 04         [ 2]  579 	addw	x, (0x04, sp)
      008612 7B 09            [ 1]  580 	ld	a, (0x09, sp)
      008614 F7               [ 1]  581 	ld	(x), a
                                    582 ;	user/max7219.c: 119: for(i = 0; i < matrix.maxLed; i++)
      008615 0C 01            [ 1]  583 	inc	(0x01, sp)
      008617 20 DF            [ 2]  584 	jra	00106$
      008619                        585 00108$:
      008619 5B 05            [ 2]  586 	addw	sp, #5
      00861B 81               [ 4]  587 	ret
                                    588 ;	user/max7219.c: 126: void DrawEx(uint8_t scrollCnt, uint16_t *data)
                                    589 ;	-----------------------------------------
                                    590 ;	 function DrawEx
                                    591 ;	-----------------------------------------
      00861C                        592 _DrawEx:
      00861C 52 0C            [ 2]  593 	sub	sp, #12
                                    594 ;	user/max7219.c: 133: Clear();
      00861E CD 84 A0         [ 4]  595 	call	_Clear
                                    596 ;	user/max7219.c: 134: for(cntC = 0; cntC < matrix.maxLed*8; cntC++)
      008621 AE 00 06         [ 2]  597 	ldw	x, #_matrix+5
      008624 1F 0B            [ 2]  598 	ldw	(0x0b, sp), x
      008626 0F 04            [ 1]  599 	clr	(0x04, sp)
      008628                        600 00109$:
      008628 1E 0B            [ 2]  601 	ldw	x, (0x0b, sp)
      00862A F6               [ 1]  602 	ld	a, (x)
      00862B 5F               [ 1]  603 	clrw	x
      00862C 97               [ 1]  604 	ld	xl, a
      00862D 58               [ 2]  605 	sllw	x
      00862E 58               [ 2]  606 	sllw	x
      00862F 58               [ 2]  607 	sllw	x
      008630 1F 09            [ 2]  608 	ldw	(0x09, sp), x
      008632 7B 04            [ 1]  609 	ld	a, (0x04, sp)
      008634 6B 08            [ 1]  610 	ld	(0x08, sp), a
      008636 0F 07            [ 1]  611 	clr	(0x07, sp)
      008638 1E 07            [ 2]  612 	ldw	x, (0x07, sp)
      00863A 13 09            [ 2]  613 	cpw	x, (0x09, sp)
      00863C 2E 51            [ 1]  614 	jrsge	00111$
                                    615 ;	user/max7219.c: 136: dataGet = data[cntC+scrollCnt];
      00863E 5F               [ 1]  616 	clrw	x
      00863F 7B 0F            [ 1]  617 	ld	a, (0x0f, sp)
      008641 97               [ 1]  618 	ld	xl, a
      008642 72 FB 07         [ 2]  619 	addw	x, (0x07, sp)
      008645 58               [ 2]  620 	sllw	x
      008646 72 FB 10         [ 2]  621 	addw	x, (0x10, sp)
      008649 FE               [ 2]  622 	ldw	x, (x)
      00864A 1F 01            [ 2]  623 	ldw	(0x01, sp), x
                                    624 ;	user/max7219.c: 137: mask = 0x0001;
      00864C AE 00 01         [ 2]  625 	ldw	x, #0x0001
      00864F 1F 05            [ 2]  626 	ldw	(0x05, sp), x
                                    627 ;	user/max7219.c: 138: for(cntR = 0; cntR<8; cntR++)
      008651 0F 03            [ 1]  628 	clr	(0x03, sp)
      008653                        629 00106$:
                                    630 ;	user/max7219.c: 141: setDot(cntC, 8 - cntR -1, 1);
      008653 A6 07            [ 1]  631 	ld	a, #0x07
      008655 10 03            [ 1]  632 	sub	a, (0x03, sp)
                                    633 ;	user/max7219.c: 140: if(dataGet&mask)
      008657 88               [ 1]  634 	push	a
      008658 7B 03            [ 1]  635 	ld	a, (0x03, sp)
      00865A 14 07            [ 1]  636 	and	a, (0x07, sp)
      00865C 97               [ 1]  637 	ld	xl, a
      00865D 7B 02            [ 1]  638 	ld	a, (0x02, sp)
      00865F 14 06            [ 1]  639 	and	a, (0x06, sp)
      008661 95               [ 1]  640 	ld	xh, a
      008662 84               [ 1]  641 	pop	a
      008663 5D               [ 2]  642 	tnzw	x
      008664 27 0D            [ 1]  643 	jreq	00102$
                                    644 ;	user/max7219.c: 141: setDot(cntC, 8 - cntR -1, 1);
      008666 4B 01            [ 1]  645 	push	#0x01
      008668 88               [ 1]  646 	push	a
      008669 7B 06            [ 1]  647 	ld	a, (0x06, sp)
      00866B 88               [ 1]  648 	push	a
      00866C CD 85 36         [ 4]  649 	call	_setDot
      00866F 5B 03            [ 2]  650 	addw	sp, #3
      008671 20 0B            [ 2]  651 	jra	00103$
      008673                        652 00102$:
                                    653 ;	user/max7219.c: 143: setDot(cntC, 8 - cntR -1, 0);
      008673 4B 00            [ 1]  654 	push	#0x00
      008675 88               [ 1]  655 	push	a
      008676 7B 06            [ 1]  656 	ld	a, (0x06, sp)
      008678 88               [ 1]  657 	push	a
      008679 CD 85 36         [ 4]  658 	call	_setDot
      00867C 5B 03            [ 2]  659 	addw	sp, #3
      00867E                        660 00103$:
                                    661 ;	user/max7219.c: 144: mask <<=1;
      00867E 1E 05            [ 2]  662 	ldw	x, (0x05, sp)
      008680 58               [ 2]  663 	sllw	x
      008681 1F 05            [ 2]  664 	ldw	(0x05, sp), x
                                    665 ;	user/max7219.c: 138: for(cntR = 0; cntR<8; cntR++)
      008683 0C 03            [ 1]  666 	inc	(0x03, sp)
      008685 7B 03            [ 1]  667 	ld	a, (0x03, sp)
      008687 A1 08            [ 1]  668 	cp	a, #0x08
      008689 25 C8            [ 1]  669 	jrc	00106$
                                    670 ;	user/max7219.c: 134: for(cntC = 0; cntC < matrix.maxLed*8; cntC++)
      00868B 0C 04            [ 1]  671 	inc	(0x04, sp)
      00868D 20 99            [ 2]  672 	jra	00109$
      00868F                        673 00111$:
      00868F 5B 0C            [ 2]  674 	addw	sp, #12
      008691 81               [ 4]  675 	ret
                                    676 	.area CODE
                                    677 	.area INITIALIZER
                                    678 	.area CABS (ABS)
